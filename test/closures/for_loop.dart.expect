library;
import self as self;
import "dart:core" as core;

static const field core::int max = 100;
static method main() → dynamic {
  dynamic closures = <dynamic>[];
  try {
    throw "for statement not implemented yet.";
  }
  on core::String catch(no-exception-var) {
  }
  core::int sum = 0;
  for(core::Function f in closures) {
    sum = sum.+(f.call());
  }
  core::int expectedSum = self::max.-(1).*(self::max).~/(2);
  expectedSum = 0;
  if(!expectedSum.==(sum)) {
    throw core::Exception::•("Unexpected sum = ${sum} != ${expectedSum}");
  }
}
